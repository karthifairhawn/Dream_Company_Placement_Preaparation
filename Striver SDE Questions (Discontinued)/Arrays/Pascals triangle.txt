118. Pascal's Triangle

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Input: numRows = 1
Output: [[1]]

Constraints:

1 <= numRows <= 30

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Solution {
    public List<List<Integer>> generate(int n) {
        
        
        List<List<Integer>>  res = new ArrayList<>();
        
        List<Integer> t1 = new ArrayList<>();
        t1.add(1);      
        res.add(t1);
        
        if(n==1) return res;
        
        List<Integer> t = new ArrayList<>();
        t.add(1);t.add(1);
        
        res.add(t);
        
        if(n==2) return res;
        
        
        
        for(int i=3;i<=n;i++){
            
            List<Integer> toAdd = new ArrayList<>();
            
            toAdd.add(1);
            
            int x=0;
            while(toAdd.size()<i-1){
                toAdd.add( res.get(i-2).get(x) + res.get(i-2).get(x+1) );
                x++;
            }
            toAdd.add(1);
            
            res.add(toAdd);
        }
        return res;
                                        
    }
}